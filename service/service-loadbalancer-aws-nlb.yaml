apiVersion: v1
kind: Service
metadata:
  name: kubia-svc-loadbalancer # service 이름
  namespace: wsscc2021 # service가 속할 namespace
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internal" # internal, internet-facing
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: deregistration_delay.timeout_seconds=120
    # AWS의 ALB를 ingress로 사용합니다.
    # AWS의 ALB를 ingress로 생성하기 위해서는 사전에 load balacner controller를 시작해야합니다.
    # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/deploy/installation/
    # 자세한 annotation은 아래 페이지를 참조합니다.
    # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/service/annotations/
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local # Local,Cluster
  # Local: node 내에 있는 pod에만 접근할 수 있도록 하여 불필요한 네트워크 홉을 줄여준다.
  # Cluster: 다른 node의 pod로도 접근할 수 있다.
  selector:
    app.kubernetes.io/name: kubia
    # service의 파드 셀렉터는 엔드포인트 목록을 만드는 데 사용됩니다.
  ports:
    - protocol: TCP
      port: 80 # 서비스 내부의 clsuterip 포트번호
      targetPort: 8080 # pod의 포트번호