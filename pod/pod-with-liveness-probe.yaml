apiVersion: v1
kind: Pod
metadata:
  name: kubia-liveness-pod # 파드 이름
  namespace: wsscc2021 # 파드가 속할 namespace
  labels:
    app.kubernetes.io/name: kubia
    # 레이블을 지정합니다.
    # kubernetes 권장 레이블을 참조하면 좋습니다.
    # https://kubernetes.io/ko/docs/concepts/overview/working-with-objects/common-labels/
spec:
  containers:
  - name: kubia # 컨테이너 이름
    image: luksa/kubia-unhealthy # 컨테이너 이미지
    ports:
      - containerPort: 8080 
        protocol: TCP
        # 어플리케이션이 수신하는 포트
        # 어플리케이션에서 0.0.0.0 으로 노출시켰다면 생략해도 되지만, 
        # 명시적으로 작성하는 것이 좋습니다.
    resources:
      requests:
        memory: "128Mi"
        cpu: "500m"
      limits:
        memory: "128Mi"
        cpu: "500m"
      # requests,limits값을 동일하게 주어 Guaranteed class로 실행하는 것이 좋습니다.
      # Guaranteed class는 pod 축출 시 후순위 파드가 됩니다.
      # QoS에 대한 자세한 내용을 kubernetes 페이지에서 참조하는 것이 좋습니다.
      # https://kubernetes.io/ko/docs/tasks/configure-pod-container/quality-service-pod/
    livenessProbe:
      httpGet:
        path: /
        port: 8080
      initialDelaySeconds: 0 # default 0, 어플리케이션이 시작될때까지 기다리는 시간입니다.
      periodSeconds: 5 # default 10, Healthcheck 요청을 보내는 주기(Interval)입니다.
      timeoutSeconds: 3 # default 1, Healthcheck 요청의 타임아웃 값입니다.
      failureThreshold: 3 # default 3, 3번 이상 실패하면 파드를 재시작합니다.
      successThreshold: 1 # default 1, 1번 이상 성공하면 Running 상태로 넘어갑니다.
      # liveness probe는 어플리케이션이 정상적으로 동작하는 지 확인하고,
      # 동작하지 않는 상태의 컨테이너를 재시작합니다.
      # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/